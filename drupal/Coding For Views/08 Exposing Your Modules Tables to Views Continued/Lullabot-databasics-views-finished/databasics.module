<?php

/**
 * @file
 * Databasics module.
 */

/**
 * Only allow users to see the page views for their own account or if they are
 * an administrator.
 */
 function databasics_check_access($restrictions) {
 	//krumo($restrictions);
 	global $user;
 	// Change this to a different variable name so we don't accidentally
 	// change the global user object.
 	$account = $user;

 	// We need to cycle through the various levels of access control and 
 	// return TRUE when we want to allow access. Returning anything else
 	// will cause access to be denied.

 	// Does the user have permission to access all views?
 	if (user_access('access all views', $account)) {
 	  return TRUE;
 	}
 	// Is this a user with permission to access the site reports?
 	if (in_array('reports', $restrictions) && user_access('access site reports', $account)) {
 	  return TRUE;
 	}
 	// Is this an owner of a user account?
 	if (in_array('owner', $restrictions)) {
 	  // Are we on a user page?
 	  if (arg(0) == 'user' && is_numeric(arg(1))) {
 	    // Does the user ID match the profile page ID?
 	     return $account->uid == arg(1);
 	  }
 	}

 	// If no conditions are met, let's be sure to deny access by default.
 	return FALSE;
 }

/**
 * Implements hook_node_view().
 */
function databasics_node_view($node, $view_mode = 'full') {
  if ($view_mode == 'full') {
    global $user;

    // Load up the current record.
    $record = databasics_get_record($node->nid, $user->uid);

    // If there is no record, create one.
    if (!$record) {
      $record = new stdClass();
      $record->nid = $node->nid;
      $record->uid = $user->uid;
      $record->view_count = 0;
      $record->last_viewed = REQUEST_TIME;
    }

    // Increment the current count.
    $record->view_count++;
    $record->last_viewed = REQUEST_TIME;

    // Save the record.
    databasics_set_record($record);

    // Set up an array of placeholders to pass to t().
    $t_args = array(
      '%num' => $record->view_count,
      '%date' => format_date($record->last_viewed),
    );

    // Add the view count information to the node content.
    $node->content['node_views'] = array(
      '#markup' => t('You have viewed this page %num times and the last time was %date.', $t_args),
      '#weight' => 10,
    );
  }
}

/**
 * Get the record.
 *
 * @param int $nid
 *   The node id.
 * @param int $uid
 *   The user id.
 * @return mixed
 *   The stdClass record, or FALSE if no record exists.
 */
function databasics_get_record($nid, $uid) {
  $query = db_select('databasics')
    ->fields('databasics')
    ->condition('nid', $nid)
    ->condition('uid', $uid);

  return $query->execute()->fetch();
}

/**
 * Save a record.
 *
 * @param stdClass $record
 *   The record to save.
 */
function databasics_set_record(stdClass $record) {
  // Use a Merge query. A Merge query is a combination of an Insert query and
  // an Update query, so if the record already exists, it will be updated.
  // @see http://drupal.org/node/310085
  db_merge('databasics')
    ->key(array('nid' => $record->nid))
    ->key(array('uid' => $record->uid))
    ->fields((array) $record)
    ->execute();
}

/**
 * Implements hook_views_api().
 */
function databasics_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'databasics'),
  );
}
