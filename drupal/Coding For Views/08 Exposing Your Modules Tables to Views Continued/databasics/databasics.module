<?php

/**
 * @file
 * Databasics module.
 */

/**
 * Implements hook_menu().
 */
function databasics_menu() {
  $items = array();

  $items['user/%user/databasics'] = array(
    'title' => 'Page Views',
    'description' => 'Listing of page views by user.',
    'page callback' => 'databasics_user_page',
    'page arguments' => array(1),
    'access callback' => 'databasics_access_callback',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Only allow users to see the page views for their own account or if they are
 * an administrator.
 */
function databasics_access_callback($account) {
  global $user;

  return $user->uid == $account->uid || user_access('access site reports');
}

/**
 * Implements hook_node_view().
 */
function databasics_node_view($node, $view_mode = 'full') {
  if ($view_mode == 'full') {
    global $user;

    // Load up the current record.
    $record = databasics_get_record($node->nid, $user->uid);

    // If there is no record, create one.
    if (!$record) {
      $record = new stdClass();
      $record->nid = $node->nid;
      $record->uid = $user->uid;
      $record->view_count = 0;
      $record->last_viewed = REQUEST_TIME;
    }

    // Increment the current count.
    $record->view_count++;
    $record->last_viewed = REQUEST_TIME;

    // Save the record.
    databasics_set_record($record);

    // Set up an array of placeholders to pass to t().
    $t_args = array(
      '%num' => $record->view_count,
      '%date' => format_date($record->last_viewed),
    );

    // Add the view count information to the node content.
    $node->content['node_views'] = array(
      '#markup' => t('You have viewed this page %num times and the last time was %date.', $t_args),
      '#weight' => 10,
    );
  }
}

/**
 * Get the record.
 *
 * @param int $nid
 *   The node id.
 * @param int $uid
 *   The user id.
 * @return mixed
 *   The stdClass record, or FALSE if no record exists.
 */
function databasics_get_record($nid, $uid) {
  $query = db_select('databasics')
    ->fields('databasics')
    ->condition('nid', $nid)
    ->condition('uid', $uid);

  return $query->execute()->fetch();
}

/**
 * Save a record.
 *
 * @param stdClass $record
 *   The record to save.
 */
function databasics_set_record(stdClass $record) {
  // Use a Merge query. A Merge query is a combination of an Insert query and
  // an Update query, so if the record already exists, it will be updated.
  // @see http://drupal.org/node/310085
  db_merge('databasics')
    ->key(array('nid' => $record->nid))
    ->key(array('uid' => $record->uid))
    ->fields((array) $record)
    ->execute();
}

/**
 * Display a tab on the user/N/databasics page which lists all the pages on the
 * site that the user has viewed and the total number of times each page has
 * been viewed.
 *
 * @param stdClass $account
 *   The user account.
 * @return
 *   A themed table of the results.
 */
function databasics_user_page(stdClass $account) {
  $rows = array();

  // Get information about all the pages the user has viewed
  $query = db_select('databasics', 'd')
    ->condition('d.uid', $account->uid);

  // Joins return the alias of the table, so we can't chain it.
  $query->innerJoin('node', 'n', 'n.nid = d.nid');

  // Load up all the fields from the databasics table.
  $query->fields('d');

  // You can use addField() to add single fields. This is especially useful if
  // you need to alias a field, but keep in mind you cannot chain these together.
  $query->addField('n', 'nid');
  $query->addField('n', 'title');

  // Iterate over the results returned from the database and collect the
  // information in an array.
  $results = $query->execute();
  foreach ($results as $record) {
    $rows[] = array(
      l($record->title, 'node/' . $record->nid),
      check_plain($record->view_count),
      format_date($record->last_viewed),
    );
  }

  // Column headers for the table.
  $header = array(t('Node Title'), t('Views'), t('Last Viewed'));

  // Return a renderable array.
  $output = array();
  $output['table'] = array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => $rows,
  );
  return $output;
}

/**
 * Implements hook_views_api().
 * Step 1: Expose your module to View; Next go to file databasics.views.inc
 */
function databasics_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'databasics'),
  );
}






