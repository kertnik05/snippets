$ docker pull microsoft/mssql-server-linux
$ docker run -d -p 1433:1433 \
> -e SA_PASSWORD='password111!' \
> -e ACCEPT_EULA=Y \
> microsoft/mssql-server-linux

$ docker info
$ Docker version
$ docker-machine ls
$ docker images
$ docker run repositoryname:tag echo "Download and Installed Completed"
$ docker run repositoryname:tag ls /
//i - interactive container t - pseudo TTY that attaches stdin and stadout (This will give you a command line access to server)
$ docker run -i -t repositoryname:tag    
$ docker run -d  repositoryname:tag   sleep 1000 //outputs docker container id
$ docker ps //display the containers detials
$docker run --rm repositoryname:tag  sleep 1 //run and remove after 1 seconds
$ docker run --name hellow_world repositoryname:tag
$ docker ps - a //to get the container_id
$ docker run -d  repositoryname:tag   sleep 100
$ docker inspect somerandomdockerid
$ docker logs somerandomdockerid
$ docker history repositoryname:tag 

$ docker run --name -it repositoryname:tag
    # apt-get update && apt-get install -y git

//Two ways to spun up a copy of a docker image
    $ docker commit container_ID repositoryname:tag //creates a new image of your container then it creates a new image
        $docker images //to see new images
        $ docker run -it repositoryname:tag


    $ touch Dockerfile
        FROM repositoryname:tag
        RUN apt-get update
        RUN apt-get install -y git
        RUN apt-get install -y vim
        :wq!
    $ docker build -t customrespositoryname/customtag .pathofyourdockerfile


//Docker File InDepth
 $ touch Dockerfile
        FROM repositoryname:tag
        RUN apt-get update && apt-get install -y \
            git \
            phyton \
            vim
        CMD ["echo", "hello world"]
        :wq!
$ docker build -t customrespositoryname:customtag .pathofyourdockerfile
$ docker run imageID //you should see hello world
$ docker run imageID echo "hello docker" // prints hello docker

//Aggressive Caching
1. To remove Aggressive Caching - re-write the instructions from 1 line to multiple line or other way around
2. $ docker build -t customrespositoryname/customtag . --no-cache=true

//Copy instructions 
$ touch filename.txt
$ vi Dockerfile 
     FROM repositoryname:tag
        RUN apt-get update && apt-get install -y \
            git \
            phyton \
            vim
        COPY filename.txt /src/filename.txt
        :wq!

//Push your Images to Docker Hub
go to hub.docker.com 

$ docker images
$ docker tag IMAGE_ID docker_hub_id/repository_name:yourtag
$ docker login --username=yourusername
$ docker push docker_hub_id/repository_name:yourtag


$docker exec -it container_id bash






Find Docker Quickstart Terminal

Docker default machine with IP 192.168.99.100